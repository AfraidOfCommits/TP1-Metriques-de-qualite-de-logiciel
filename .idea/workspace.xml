<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ArtifactsWorkspaceSettings">
    <artifacts-to-build>
      <artifact name="JLS" />
      <artifact name="LSEC" />
      <artifact name="NVLOC" />
    </artifacts-to-build>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e9214b9f-17c4-4444-b89a-acd9986e600d" name="Changes" comment="Work done on Box Plots.">
      <change afterPath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/util/stats/charts_boxplot/AbstractDrawnBoxPlot.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/util/stats/charts_boxplot/CustomBoxAndWhiskerRenderer.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/util/stats/charts_boxplot/DrawnBoxPlotCD.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/util/stats/charts_boxplot/DrawnBoxPlotNCH.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/util/stats/charts_boxplot/DrawnBoxPlotNLOC.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/util/stats/charts_scatterplot/DrawnScatterPlot.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/JLS/META-INF/MANIFEST.MF" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/Test.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/JavaRepositoryParser.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/JavaRepositoryParser.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/result/ParsedClass.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/result/ParsedClass.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/result/ParsedRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/result/ParsedRepository.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/util/stats/charts_boxplot/BoxPlot.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/util/stats/charts_boxplot/BoxPlotData.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/util/stats/charts_boxplot/BoxPlotData.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/util/stats/charts_scatterplot/ScatterPlot.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/util/stats/charts_scatterplot/ScatterPlotData.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/util/stats/charts_scatterplot/ScatterPlotData.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/util/strings/CodeParser.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/util/strings/CodeParser.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeInsightWorkspaceSettings">
    <option name="optimizeImportsOnTheFly" value="true" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="package-info" />
        <option value="Enum" />
        <option value="Class" />
        <option value="Interface" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="tp2" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="jar://$PROJECT_DIR$/../../../../../../Program Files/Microsoft/jdk-11.0.12.7-hotspot/lib/src.zip!/java.base/java/util/regex/Pattern.java" root0="SKIP_INSPECTION" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2F3OKTd5h5aAJGz7muLXfpuoAIO" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.15429688&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.project.maven.repository.indices&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="ExtractSuperBase.RECENT_KEYS">
      <recent name="net.frootloop.qa.parser.util.stats.charts_boxplot" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="net.frootloop.qa.parser.util.stats.charts_boxplot" />
      <recent name="net.frootloop.qa.parser.util.stats" />
      <recent name="net.frootloop.qa.parser.util.stats.comparators" />
    </key>
  </component>
  <component name="RunManager" selected="Application.SoftwareMetricsMain">
    <configuration name="SoftwareMetricsMain" type="Application" factoryName="Application" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="net.frootloop.qa.SoftwareMetricsMain" />
      <module name="TP1 Metriques de qualite de logiciel" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="net.frootloop.qa.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test" type="Application" factoryName="Application">
      <option name="MAIN_CLASS_NAME" value="net.frootloop.qa.Test" />
      <module name="TP1 Metriques de qualite de logiciel" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Application.SoftwareMetricsMain" />
      <item itemvalue="Application.Test" />
    </list>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="e9214b9f-17c4-4444-b89a-acd9986e600d" name="Changes" comment="" />
      <created>1663717242553</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1663717242553</updated>
    </task>
    <task id="LOCAL-00047" summary="Fixed a index out of bounds error thrown by package name detection.&#10;Started adding a way to replace variable names with generic values.">
      <created>1666199867432</created>
      <option name="number" value="00047" />
      <option name="presentableId" value="LOCAL-00047" />
      <option name="project" value="LOCAL" />
      <updated>1666199867432</updated>
    </task>
    <task id="LOCAL-00048" summary="Ok, now the error is ACTUALLY fixed!">
      <created>1666201378604</created>
      <option name="number" value="00048" />
      <option name="presentableId" value="LOCAL-00048" />
      <option name="project" value="LOCAL" />
      <updated>1666201378604</updated>
    </task>
    <task id="LOCAL-00049" summary="Typo">
      <created>1666201400486</created>
      <option name="number" value="00049" />
      <option name="presentableId" value="LOCAL-00049" />
      <option name="project" value="LOCAL" />
      <updated>1666201400486</updated>
    </task>
    <task id="LOCAL-00050" summary="Fixed up the class signature lookups in import statements, which means also fixed up counting of indirect references. The parser is basically feature complete for most of our purposes!">
      <created>1666203753251</created>
      <option name="number" value="00050" />
      <option name="presentableId" value="LOCAL-00050" />
      <option name="project" value="LOCAL" />
      <updated>1666203753251</updated>
    </task>
    <task id="LOCAL-00051" summary="Casting a ParsedClass to String spits out the class' signature (rather than its full CodeTree reconstruction)">
      <created>1666203961487</created>
      <option name="number" value="00051" />
      <option name="presentableId" value="LOCAL-00051" />
      <option name="project" value="LOCAL" />
      <updated>1666203961487</updated>
    </task>
    <task id="LOCAL-00052" summary="Scraped removal of var names. Would've increased fidelity, but not worth the effort; detecting variable names on instantiation is easy, but then figuring out where they're called exactly in the code and when to replace them with a generic name is a huge pain.">
      <created>1666208276892</created>
      <option name="number" value="00052" />
      <option name="presentableId" value="LOCAL-00052" />
      <option name="project" value="LOCAL" />
      <updated>1666208276892</updated>
    </task>
    <task id="LOCAL-00053" summary="Scraped removal of var names; detecting attributes will be painful, so I've opted to use a library for LCOM (Lack of Cohesion Metric). Jasome looks promising... and achieves already most of what I have here.">
      <created>1666537952460</created>
      <option name="number" value="00053" />
      <option name="presentableId" value="LOCAL-00053" />
      <option name="project" value="LOCAL" />
      <updated>1666537952461</updated>
    </task>
    <task id="LOCAL-00054" summary="Managed to add variable detection and attribute detection, as well as parsing methods. Still no dependencies, though I almost used &quot;JavaParser&quot; and &quot;Jasome&quot;! Truth be told I tried to look at the library's source code and couldn't understand how it read the inputted data, and how to read metrics from them directly. &#10;&#10;I rather work like a mule and build my own solution, but know exactly what my code does and not have to worry about compilation headaches.">
      <created>1666549550969</created>
      <option name="number" value="00054" />
      <option name="presentableId" value="LOCAL-00054" />
      <option name="project" value="LOCAL" />
      <updated>1666549550969</updated>
    </task>
    <task id="LOCAL-00055" summary="Added LCOM1 and LCOM2 calculations in ParsedClass! Was a lot of work, and still needs testing.">
      <created>1666557460719</created>
      <option name="number" value="00055" />
      <option name="presentableId" value="LOCAL-00055" />
      <option name="project" value="LOCAL" />
      <updated>1666557460719</updated>
    </task>
    <task id="LOCAL-00056" summary="Added LCOM calculations to be made over entire repositories.&#10;Added WMC metric, aka Weighted Methods per Class, to both ParsedClass and ParsedRepository.">
      <created>1666558638205</created>
      <option name="number" value="00056" />
      <option name="presentableId" value="LOCAL-00056" />
      <option name="project" value="LOCAL" />
      <updated>1666558638205</updated>
    </task>
    <task id="LOCAL-00057" summary="Planning on adding CBO and DIT for extra modularity and maintainability calculations, so added some comments to indicate intention">
      <created>1666558955212</created>
      <option name="number" value="00057" />
      <option name="presentableId" value="LOCAL-00057" />
      <option name="project" value="LOCAL" />
      <updated>1666558955212</updated>
    </task>
    <task id="LOCAL-00058" summary="Huge progress on file walking, and input handling. Debugged some null pointer exceptions in ParsedMethod, and added a new (first) dependency - to JGit that gives me easy access to the number of commits made in a local repository.">
      <created>1666630553148</created>
      <option name="number" value="00058" />
      <option name="presentableId" value="LOCAL-00058" />
      <option name="project" value="LOCAL" />
      <updated>1666630553148</updated>
    </task>
    <task id="LOCAL-00059" summary="- Added and tested FilePathParser and GitGudder. I can now search for files, search for local git repositories, and tell you how many commits were made in that repo's lifetime. Hoorah!!&#10;- UX added for searching for source files and repositories, with a cute lil' console progress bar. Teehee">
      <created>1666666670905</created>
      <option name="number" value="00059" />
      <option name="presentableId" value="LOCAL-00059" />
      <option name="project" value="LOCAL" />
      <updated>1666666670905</updated>
    </task>
    <task id="LOCAL-00060" summary="Added some pretty, pretty cool input handling for fetching source files or local repositories from user responses. The project's coming together, so now what's left;&#10;  - 1 out of 2 measures of codebase maturity are implemented;&#10;  - 1 out of 2 measures of codebase testability are implemented;&#10;&#10;Next steps should go towards figuring out the two metrics I'm missing if I want to be able to provide an answer to 'Is this codebase easily maintanable? Why or why not?'">
      <created>1666674796517</created>
      <option name="number" value="00060" />
      <option name="presentableId" value="LOCAL-00060" />
      <option name="project" value="LOCAL" />
      <updated>1666674796517</updated>
    </task>
    <task id="LOCAL-00061" summary="Refactoring. I might as well">
      <created>1666674994397</created>
      <option name="number" value="00061" />
      <option name="presentableId" value="LOCAL-00061" />
      <option name="project" value="LOCAL" />
      <updated>1666674994397</updated>
    </task>
    <task id="LOCAL-00062" summary="Created a proper main function for submission.">
      <created>1666708279774</created>
      <option name="number" value="00062" />
      <option name="presentableId" value="LOCAL-00062" />
      <option name="project" value="LOCAL" />
      <updated>1666708279774</updated>
    </task>
    <task id="LOCAL-00063" summary="Improved ParsedMethod to allow a class to return methods that have a certain name, which will be hella useful to know if we're referencing a certain method somewhere else in the code (say, in unit tests!)">
      <created>1666710256288</created>
      <option name="number" value="00063" />
      <option name="presentableId" value="LOCAL-00063" />
      <option name="project" value="LOCAL" />
      <updated>1666710256288</updated>
    </task>
    <task id="LOCAL-00064" summary="Added calculation of number of unit tests per methods. Didn't test that bit yet, but fingers crossed.">
      <created>1666717806521</created>
      <option name="number" value="00064" />
      <option name="presentableId" value="LOCAL-00064" />
      <option name="project" value="LOCAL" />
      <updated>1666717806521</updated>
    </task>
    <task id="LOCAL-00065" summary="Almost done with the code.">
      <created>1666723864572</created>
      <option name="number" value="00065" />
      <option name="presentableId" value="LOCAL-00065" />
      <option name="project" value="LOCAL" />
      <updated>1666723864572</updated>
    </task>
    <task id="LOCAL-00066" summary="Goddamn, I did not know Java could leak memory from the stack to the heap. I am sweating like a hog">
      <created>1666741640097</created>
      <option name="number" value="00066" />
      <option name="presentableId" value="LOCAL-00066" />
      <option name="project" value="LOCAL" />
      <updated>1666741640097</updated>
    </task>
    <task id="LOCAL-00067" summary="Oh my God. It works. IT'S ALIVEEEE">
      <created>1666745498299</created>
      <option name="number" value="00067" />
      <option name="presentableId" value="LOCAL-00067" />
      <option name="project" value="LOCAL" />
      <updated>1666745498299</updated>
    </task>
    <task id="LOCAL-00068" summary="Trying to debug the fact that methods seem to have no tests. Fixed up and improved 'incrementTestedMethodsNumTests', so I think the issue is with functions oustide the scope of the current class. In which case... I don't have the time to debug right now.">
      <created>1666753562458</created>
      <option name="number" value="00068" />
      <option name="presentableId" value="LOCAL-00068" />
      <option name="project" value="LOCAL" />
      <updated>1666753562458</updated>
    </task>
    <task id="LOCAL-00069" summary="Done.">
      <created>1666756440420</created>
      <option name="number" value="00069" />
      <option name="presentableId" value="LOCAL-00069" />
      <option name="project" value="LOCAL" />
      <updated>1666756440420</updated>
    </task>
    <task id="LOCAL-00070" summary="New git branch.">
      <created>1667831499016</created>
      <option name="number" value="00070" />
      <option name="presentableId" value="LOCAL-00070" />
      <option name="project" value="LOCAL" />
      <updated>1667831499016</updated>
    </task>
    <task id="LOCAL-00071" summary="Moved inputhandler package to be enclosed in the parser package. Makes much more sense that way.">
      <created>1667832597069</created>
      <option name="number" value="00071" />
      <option name="presentableId" value="LOCAL-00071" />
      <option name="project" value="LOCAL" />
      <updated>1667832597069</updated>
    </task>
    <task id="LOCAL-00072" summary="Fixed the bugs relating to assert statement detections and referenced method names in ParsedMethod;&#10;&#10;  - In ParsedMethod.setReferencedMethods(), the issue was that the 'else' condition was embedded in the 'if'. Such a small bug, but it made it so that no methods outside of scope were added to methodsNamesReferencedOutsideScope. &#10;  &#10;  - In StringParser.rxAssertStatements, added condition '\n\s+' to detect assert statements that were preceded by line breaks. Now, all asserts are detected and counted.">
      <created>1667836639370</created>
      <option name="number" value="00072" />
      <option name="presentableId" value="LOCAL-00072" />
      <option name="project" value="LOCAL" />
      <updated>1667836639370</updated>
    </task>
    <task id="LOCAL-00073" summary="Improved input handler, and fixed small bugs related to inputs. We can now get statistics from an individual source file, and paste a Windows 11 path directly with no formatting.">
      <created>1667837341277</created>
      <option name="number" value="00073" />
      <option name="presentableId" value="LOCAL-00073" />
      <option name="project" value="LOCAL" />
      <updated>1667837341277</updated>
    </task>
    <task id="LOCAL-00074" summary="Fixed StringParser.rxAssertStatements, and consequently changed the group index to 3 in StringParser.getAssertStatementsOf().">
      <created>1667839325754</created>
      <option name="number" value="00074" />
      <option name="presentableId" value="LOCAL-00074" />
      <option name="project" value="LOCAL" />
      <updated>1667839325754</updated>
    </task>
    <task id="LOCAL-00075" summary="Fixed reference building between methods and functions. Parsed Repositories now have accurate testability.">
      <created>1668018435630</created>
      <option name="number" value="00075" />
      <option name="presentableId" value="LOCAL-00075" />
      <option name="project" value="LOCAL" />
      <updated>1668018435630</updated>
    </task>
    <task id="LOCAL-00076" summary="I wish JGIT was a person just so that I could slap them really hard across the face&#10;&#10;I wish JGIT, the Java library, could feel pain, so that I may inflict upon it the pain it has caused me">
      <created>1668368867519</created>
      <option name="number" value="00076" />
      <option name="presentableId" value="LOCAL-00076" />
      <option name="project" value="LOCAL" />
      <updated>1668368867519</updated>
    </task>
    <task id="LOCAL-00077" summary="Also, this is a freebie, but Maven too, you unfriendly garbage. I'll forgive you Maven for your many UX sins, but seriously, as a newbie to Intellij, fuck all this">
      <created>1668369024206</created>
      <option name="number" value="00077" />
      <option name="presentableId" value="LOCAL-00077" />
      <option name="project" value="LOCAL" />
      <updated>1668369024206</updated>
    </task>
    <task id="LOCAL-00078" summary="- Fixed up JGit to provide commit counts per file; &#10;- Added functionality to Main class for users to manually fetch commit counts of a source file; &#10;- Improved InputHandler's 'promptWelcome' function">
      <created>1668529133328</created>
      <option name="number" value="00078" />
      <option name="presentableId" value="LOCAL-00078" />
      <option name="project" value="LOCAL" />
      <updated>1668529133328</updated>
    </task>
    <task id="LOCAL-00079" summary="- Tweaked GitGudder;&#10;- Improved SoftwareMetricsMain's handling of getting commit counts;">
      <created>1668530034891</created>
      <option name="number" value="00079" />
      <option name="presentableId" value="LOCAL-00079" />
      <option name="project" value="LOCAL" />
      <updated>1668530034891</updated>
    </task>
    <task id="LOCAL-00080" summary="- Refactored interfaces into 'util';&#10;- Added functionality in ParsedRepository for average commits per class, get most committed class, get least commit class;">
      <created>1668531447589</created>
      <option name="number" value="00080" />
      <option name="presentableId" value="LOCAL-00080" />
      <option name="project" value="LOCAL" />
      <updated>1668531447590</updated>
    </task>
    <task id="LOCAL-00081" summary="- Started adding infrastructure to implement JFreeChart's Box Plots for commits made per class.">
      <created>1668533628949</created>
      <option name="number" value="00081" />
      <option name="presentableId" value="LOCAL-00081" />
      <option name="project" value="LOCAL" />
      <updated>1668533628949</updated>
    </task>
    <task id="LOCAL-00082" summary="- Tweaked error description">
      <created>1668533917089</created>
      <option name="number" value="00082" />
      <option name="presentableId" value="LOCAL-00082" />
      <option name="project" value="LOCAL" />
      <updated>1668533917089</updated>
    </task>
    <task id="LOCAL-00083" summary="Input can now show most and least committed class. Also, fixed issue relating to speed of analysis; now caching commit counts rather than recalculating them on request.">
      <created>1668534478749</created>
      <option name="number" value="00083" />
      <option name="presentableId" value="LOCAL-00083" />
      <option name="project" value="LOCAL" />
      <updated>1668534478749</updated>
    </task>
    <task id="LOCAL-00084" summary="Fixed ParsedRepository.getMostCommittedClass() and ParsedRepository.getLeastCommittedClass() methods.">
      <created>1668534587467</created>
      <option name="number" value="00084" />
      <option name="presentableId" value="LOCAL-00084" />
      <option name="project" value="LOCAL" />
      <updated>1668534587467</updated>
    </task>
    <task id="LOCAL-00085" summary="Added context to JavaRepositoryParser.analyseRepositoryAt()'s count for NCH; JGit is unable to take into consideration the commits made to a file that was refactored, only the commits made to the file itself as it is now.&#10;&#10;In other words, NCH is always underestimated by our software.">
      <created>1668534845901</created>
      <option name="number" value="00085" />
      <option name="presentableId" value="LOCAL-00085" />
      <option name="project" value="LOCAL" />
      <updated>1668534845901</updated>
    </task>
    <task id="LOCAL-00086" summary="Added documentation for the otherwise strange ParsedClassCommitComparator class.">
      <created>1668535071593</created>
      <option name="number" value="00086" />
      <option name="presentableId" value="LOCAL-00086" />
      <option name="project" value="LOCAL" />
      <updated>1668535071594</updated>
    </task>
    <task id="LOCAL-00087" summary="Started work on box plot implementation.">
      <created>1668620408569</created>
      <option name="number" value="00087" />
      <option name="presentableId" value="LOCAL-00087" />
      <option name="project" value="LOCAL" />
      <updated>1668620408569</updated>
    </task>
    <task id="LOCAL-00088" summary="Advanced a bit on Box Plot class, but hit a road block; I have no way, with my current implementation, of accessing lines of code and lines of comments per CodeTree (or class, method, etc.).&#10;&#10;In other words, I have to completely rework the parsing and communication flow between CodeTree's and ParsedSourceFile's constructors. Fml.">
      <created>1668626456476</created>
      <option name="number" value="00088" />
      <option name="presentableId" value="LOCAL-00088" />
      <option name="project" value="LOCAL" />
      <updated>1668626456477</updated>
    </task>
    <task id="LOCAL-00089" summary="Complete rework of CodeTree and ParsedSourceFile generation!&#10;- Now allows for any node in the tree (be it classes, functions, methods, for loops, etc.) to know how many lines it is composed of; empty lines, lines of code, lines of comments.&#10;&#10;Added CodeStatement class to transfer data from ParsedSourceFile to CodeTree;&#10;- Contains data on a singular statement, including comments, empty lines, code, and the terminaison char (i.e. either '{', '}', or ';').&#10;&#10;Better input handling for parsing single files:&#10;- Now asks the user for a directory to start looking from.">
      <created>1668748014900</created>
      <option name="number" value="00089" />
      <option name="presentableId" value="LOCAL-00089" />
      <option name="project" value="LOCAL" />
      <updated>1668748014901</updated>
    </task>
    <task id="LOCAL-00090" summary="Implemented logic for scatter plots and box plots in the form of BoxPlotData and ScatterPlotData functions. Now all I need is to tie it to JFreeChart to get an outputted image.">
      <created>1668760482417</created>
      <option name="number" value="00090" />
      <option name="presentableId" value="LOCAL-00090" />
      <option name="project" value="LOCAL" />
      <updated>1668760482417</updated>
    </task>
    <task id="LOCAL-00091" summary="Removed CodeBlock cache and replaced with null value catchers, in CodeTree constructor. Also solved a NullPointerException for a regex method.">
      <created>1668761500352</created>
      <option name="number" value="00091" />
      <option name="presentableId" value="LOCAL-00091" />
      <option name="project" value="LOCAL" />
      <updated>1668761500352</updated>
    </task>
    <task id="LOCAL-00092" summary="Removed print statements. Also, successfully tested new data extraction features (commits per class, num lines per code block) with JFreeChart and total success.&#10;&#10;To-do;&#10;- Plug in charts to visualize the three relevant statistics, i.e. NLOC, CD and NoComm;&#10;- Introduce a new feature in the JavaRepositoryParser class to show these statistics (ideally with JFreeChart graphs);">
      <created>1668762628388</created>
      <option name="number" value="00092" />
      <option name="presentableId" value="LOCAL-00092" />
      <option name="project" value="LOCAL" />
      <updated>1668762628388</updated>
    </task>
    <task id="LOCAL-00093" summary="Made arrays public; will have to remember that they oughta be 'final'">
      <created>1668762779836</created>
      <option name="number" value="00093" />
      <option name="presentableId" value="LOCAL-00093" />
      <option name="project" value="LOCAL" />
      <updated>1668762779836</updated>
    </task>
    <task id="LOCAL-00094" summary="Now we're getting somewhere...">
      <created>1668769219948</created>
      <option name="number" value="00094" />
      <option name="presentableId" value="LOCAL-00094" />
      <option name="project" value="LOCAL" />
      <updated>1668769219949</updated>
    </task>
    <task id="LOCAL-00095" summary="Work done on Box Plots.">
      <created>1668794537599</created>
      <option name="number" value="00095" />
      <option name="presentableId" value="LOCAL-00095" />
      <option name="project" value="LOCAL" />
      <updated>1668794537599</updated>
    </task>
    <option name="localTasksCounter" value="96" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Fixed the bugs relating to assert statement detections and referenced method names in ParsedMethod;&#10;&#10;  - In ParsedMethod.setReferencedMethods(), the issue was that the 'else' condition was embedded in the 'if'. Such a small bug, but it made it so that no methods outside of scope were added to methodsNamesReferencedOutsideScope. &#10;  &#10;  - In StringParser.rxAssertStatements, added condition '\n\s+' to detect assert statements that were preceded by line breaks. Now, all asserts are detected and counted." />
    <MESSAGE value="Improved input handler, and fixed small bugs." />
    <MESSAGE value="Improved input handler, and fixed small bugs related to inputs. We can now get statistics from an individual source file, and paste a Windows 11 path directly with no formatting." />
    <MESSAGE value="Fixed StringParser.rxAssertStatements, and consequently changed the group index to 3 in StringParser.getAssertStatementsOf()." />
    <MESSAGE value="Fixed reference building between methods and functions. Parsed Repositories now have accurate testability." />
    <MESSAGE value="I wish JGIT was a person just so that I could slap them really hard across the face&#10;&#10;I wish JGIT, the Java library, could feel pain, so that I may inflict upon it the pain it has caused me" />
    <MESSAGE value="Also, this is a freebie, but Maven too, you unfriendly garbage. I'll forgive you Maven for your many UX sins, but seriously, as a newbie to Intellij, fuck all this" />
    <MESSAGE value="- Fixed up JGit to provide commit counts per file; &#10;- Added functionality to Main class for users to manually fetch commit counts of a source file; &#10;- Improved InputHandler's 'promptWelcome' function" />
    <MESSAGE value="- Tweaked GitGudder;&#10;- Improved SoftwareMetricsMain's handling of getting commit counts;" />
    <MESSAGE value="- Refactored interfaces into 'util';&#10;- Added functionality in ParsedRepository for average commits per class, get most committed class, get least commit class;" />
    <MESSAGE value="- Started adding infrastructure to implement JFreeChart's Box Plots for commits made per class." />
    <MESSAGE value="- Tweaked error description" />
    <MESSAGE value="Input can now show most and least committed class. Also, fixed issue relating to speed of analysis; now caching commit counts rather than recalculating them on request." />
    <MESSAGE value="Fixed ParsedRepository.getMostCommittedClass() and ParsedRepository.getLeastCommittedClass() methods." />
    <MESSAGE value="Added context to JavaRepositoryParser.analyseRepositoryAt()'s count for NCH; JGit is unable to take into consideration the commits made to a file that was refactored, only the commits made to the file itself as it is now.&#10;&#10;In other words, NCH is always underestimated by our software." />
    <MESSAGE value="Added documentation for the otherwise strange ParsedClassCommitComparator class." />
    <MESSAGE value="Started work on box plot implementation." />
    <MESSAGE value="Advanced a bit on Box Plot class, but hit a road block; I have no way, with my current implementation, of accessing lines of code and lines of comments per CodeTree (or class, method, etc.).&#10;&#10;In other words, I have to completely rework the parsing and communication flow between CodeTree's and ParsedSourceFile's constructors. Fml." />
    <MESSAGE value="Complete rework of CodeTree and ParsedSourceFile generation!&#10;- Now allows for any node in the tree (be it classes, functions, methods, for loops, etc.) to know how many lines it is composed of; empty lines, lines of code, lines of comments.&#10;&#10;Added CodeStatement class to transfer data from ParsedSourceFile to CodeTree;&#10;- Contains data on a singular statement, including comments, empty lines, code, and the terminaison char (i.e. either '{', '}', or ';').&#10;&#10;Better input handling for parsing single files:&#10;- Now asks the user for a directory to start looking from." />
    <MESSAGE value="Implemented logic for scatter plots and box plots in the form of BoxPlotData and ScatterPlotData functions. Now all I need is to tie it to JFreeChart to get an outputted image." />
    <MESSAGE value="Removed CodeBlock cache and replaced with null value catchers, in CodeTree constructor. Also solved a NullPointerException for a regex method." />
    <MESSAGE value="Removed print statements. Also, successfully tested new data extraction features (commits per class, num lines per code block) with JFreeChart and total success.&#10;&#10;To-do;&#10;- Plug in charts to visualize the three relevant statistics, i.e. NLOC, CD and NoComm;&#10;- Introduce a new feature in the JavaRepositoryParser class to show these statistics (ideally with JFreeChart graphs);" />
    <MESSAGE value="Made arrays public; will have to remember that they oughta be 'final'" />
    <MESSAGE value="Now we're getting somewhere..." />
    <MESSAGE value="Work done on Box Plots." />
    <option name="LAST_COMMIT_MESSAGE" value="Work done on Box Plots." />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <breakpoint enabled="true" type="java-exception">
          <properties class="java.lang.StackOverflowError" package="java.lang" />
          <option name="timeStamp" value="2" />
        </breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/util/InputHandler.java</url>
          <line>114</line>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>