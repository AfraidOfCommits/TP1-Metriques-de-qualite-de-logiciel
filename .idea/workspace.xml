<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ArtifactsWorkspaceSettings">
    <artifacts-to-build>
      <artifact name="JLS" />
      <artifact name="LSEC" />
      <artifact name="NVLOC" />
    </artifacts-to-build>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e9214b9f-17c4-4444-b89a-acd9986e600d" name="Changes" comment="- Tweaked GitGudder;&#10;- Improved SoftwareMetricsMain's handling of getting commit counts;">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/SoftwareMetricsMain.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/SoftwareMetricsMain.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/Test.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/Test.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/JavaRepositoryParser.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/JavaRepositoryParser.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/JavaSourceFileParser.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/JavaSourceFileParser.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/StringParser.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/util/StringParser.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/inputhandling/FilePathHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/util/FilePathHandler.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/inputhandling/GitGudder.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/util/GitGudder.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/inputhandling/InputHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/util/InputHandler.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/result/ParsedClass.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/result/ParsedClass.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/result/ParsedMethod.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/result/ParsedMethod.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/result/ParsedRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/result/ParsedRepository.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/result/ParsedSourceFile.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/result/ParsedSourceFile.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/result/internal/CodeTree.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/net/frootloop/qa/parser/result/internal/CodeTree.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeInsightWorkspaceSettings">
    <option name="optimizeImportsOnTheFly" value="true" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Class" />
        <option value="Enum" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="tp2" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="jar://$PROJECT_DIR$/../../../../../../Program Files/Microsoft/jdk-11.0.12.7-hotspot/lib/src.zip!/java.base/java/util/regex/Pattern.java" root0="SKIP_INSPECTION" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2F3OKTd5h5aAJGz7muLXfpuoAIO" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.15429688&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.project.maven.repository.indices&quot;
  }
}</component>
  <component name="RunManager">
    <configuration name="SoftwareMetricsMain" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="net.frootloop.qa.SoftwareMetricsMain" />
      <module name="TP1 Metriques de qualite de logiciel" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="net.frootloop.qa.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.SoftwareMetricsMain" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="e9214b9f-17c4-4444-b89a-acd9986e600d" name="Changes" comment="" />
      <created>1663717242553</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1663717242553</updated>
    </task>
    <task id="LOCAL-00031" summary="Added some overloads for path types (String or Path now works, and inputting a String will format it as well!)">
      <created>1664586035189</created>
      <option name="number" value="00031" />
      <option name="presentableId" value="LOCAL-00031" />
      <option name="project" value="LOCAL" />
      <updated>1664586035190</updated>
    </task>
    <task id="LOCAL-00032" summary="Same as last commit, but this time for File Parser as well as Repo Parser.">
      <created>1664586137172</created>
      <option name="number" value="00032" />
      <option name="presentableId" value="LOCAL-00032" />
      <option name="project" value="LOCAL" />
      <updated>1664586137172</updated>
    </task>
    <task id="LOCAL-00033" summary="- Fixed a few rogue while loops that were caused by regex matcher instantiation. &#10;- Fixed order at which regexes will be checked for code statements.">
      <created>1664587348803</created>
      <option name="number" value="00033" />
      <option name="presentableId" value="LOCAL-00033" />
      <option name="project" value="LOCAL" />
      <updated>1664587348803</updated>
    </task>
    <task id="LOCAL-00034" summary="- Added JLS!&#10;- Fixed a HUGE, dumb bug relating to pointers for the repo variable in JavaRepositoryParser.">
      <created>1664591280674</created>
      <option name="number" value="00034" />
      <option name="presentableId" value="LOCAL-00034" />
      <option name="project" value="LOCAL" />
      <updated>1664591280674</updated>
    </task>
    <task id="LOCAL-00035" summary="- Added LSEC!">
      <created>1664591744133</created>
      <option name="number" value="00035" />
      <option name="presentableId" value="LOCAL-00035" />
      <option name="project" value="LOCAL" />
      <updated>1664591744133</updated>
    </task>
    <task id="LOCAL-00036" summary="- Improved LSEC!">
      <created>1664592028732</created>
      <option name="number" value="00036" />
      <option name="presentableId" value="LOCAL-00036" />
      <option name="project" value="LOCAL" />
      <updated>1664592028732</updated>
    </task>
    <task id="LOCAL-00037" summary="- Added NVLOC. I got mixed up with the names, LSEC was never added.">
      <created>1664592105076</created>
      <option name="number" value="00037" />
      <option name="presentableId" value="LOCAL-00037" />
      <option name="project" value="LOCAL" />
      <updated>1664592105076</updated>
    </task>
    <task id="LOCAL-00038" summary="Refactor and LSEC getting started.">
      <created>1664592455508</created>
      <option name="number" value="00038" />
      <option name="presentableId" value="LOCAL-00038" />
      <option name="project" value="LOCAL" />
      <updated>1664592455508</updated>
    </task>
    <task id="LOCAL-00039" summary="LSEC's logic is done, now I need to generate a CSV.">
      <created>1664594097909</created>
      <option name="number" value="00039" />
      <option name="presentableId" value="LOCAL-00039" />
      <option name="project" value="LOCAL" />
      <updated>1664594097909</updated>
    </task>
    <task id="LOCAL-00040" summary="LSEC and JLS should, theoretically, have CSV outputs now. God help me">
      <created>1664594692852</created>
      <option name="number" value="00040" />
      <option name="presentableId" value="LOCAL-00040" />
      <option name="project" value="LOCAL" />
      <updated>1664594692852</updated>
    </task>
    <task id="LOCAL-00041" summary="COMPILEEEE">
      <created>1664595861592</created>
      <option name="number" value="00041" />
      <option name="presentableId" value="LOCAL-00041" />
      <option name="project" value="LOCAL" />
      <updated>1664595861592</updated>
    </task>
    <task id="LOCAL-00042" summary="Done.">
      <created>1664596504293</created>
      <option name="number" value="00042" />
      <option name="presentableId" value="LOCAL-00042" />
      <option name="project" value="LOCAL" />
      <updated>1664596504293</updated>
    </task>
    <task id="LOCAL-00043" summary="Added some prelimenary groundwork for docstring detection. Eventually I will want to assign docstrings to their methods, but for now all it does is count the number of lines of docstrings there are in a given source file.">
      <created>1665011942281</created>
      <option name="number" value="00043" />
      <option name="presentableId" value="LOCAL-00043" />
      <option name="project" value="LOCAL" />
      <updated>1665011942281</updated>
    </task>
    <task id="LOCAL-00044" summary="Huge improvements to the codebase. &#10;&#10;I've switched the data structure of code representation to a proper tree, allowing for an accurate cyclomatic complexity algorithm and for much simpler parsing and inheritance/scope detection, and eventually parsing methods and functions if required. &#10;&#10;I've hugely improved comment detection and line counting, making it so that docstrings can now be properly included in the number of lines of comments.&#10;&#10;'JavaSourceFileParser' was bloated and hard to read, so I've gutted it and gave its functionality to its subclasses. Especially now that we have a tree, parsing no longer needs to be linear, but rather it is now dynamically programmed through recursive node calls in 'ParsedClass' and 'CodeTree' constructors.&#10;&#10;I've also allocated all regex calls to the StringParser class and just in general made things more modular. Huge quality of life improvement for myself with just that.">
      <created>1666107040237</created>
      <option name="number" value="00044" />
      <option name="presentableId" value="LOCAL-00044" />
      <option name="project" value="LOCAL" />
      <updated>1666107040237</updated>
    </task>
    <task id="LOCAL-00045" summary="Add getters for most directly and indirectly referenced classes of a repo.">
      <created>1666107782240</created>
      <option name="number" value="00045" />
      <option name="presentableId" value="LOCAL-00045" />
      <option name="project" value="LOCAL" />
      <updated>1666107782240</updated>
    </task>
    <task id="LOCAL-00046" summary="More big strides; added new features, and fixed bugs or improved existing ones. &#10;&#10; - CLASS REFERENCES : Now able to get the most referenced class overall, and now 'most referenced' classes will only be in the repository queried. Otherwise, it always returns 'String', lol.&#10; &#10; - REFERENCE DETECTION : Hugely improved detection of classes in source code, now including references hidden in collections such as &lt;T&gt; or List&lt;Integer&gt;.&#10; &#10; - PRINT METHODS : You can now print out a file's parsed source code, or a class' parsed source code. Very useful for debugging, and was fun to implement.&#10; &#10; - CYCLOMATIC COMPLEXITY : I still need to improve it somewhat, but for now approximation of complexity is fairly close to calculations made by CKJM. I've removed counts for boolean expressions, and also moved most of the detection to 'StringParser' (except for switch statements).">
      <created>1666199163261</created>
      <option name="number" value="00046" />
      <option name="presentableId" value="LOCAL-00046" />
      <option name="project" value="LOCAL" />
      <updated>1666199163261</updated>
    </task>
    <task id="LOCAL-00047" summary="Fixed a index out of bounds error thrown by package name detection.&#10;Started adding a way to replace variable names with generic values.">
      <created>1666199867432</created>
      <option name="number" value="00047" />
      <option name="presentableId" value="LOCAL-00047" />
      <option name="project" value="LOCAL" />
      <updated>1666199867432</updated>
    </task>
    <task id="LOCAL-00048" summary="Ok, now the error is ACTUALLY fixed!">
      <created>1666201378604</created>
      <option name="number" value="00048" />
      <option name="presentableId" value="LOCAL-00048" />
      <option name="project" value="LOCAL" />
      <updated>1666201378604</updated>
    </task>
    <task id="LOCAL-00049" summary="Typo">
      <created>1666201400486</created>
      <option name="number" value="00049" />
      <option name="presentableId" value="LOCAL-00049" />
      <option name="project" value="LOCAL" />
      <updated>1666201400486</updated>
    </task>
    <task id="LOCAL-00050" summary="Fixed up the class signature lookups in import statements, which means also fixed up counting of indirect references. The parser is basically feature complete for most of our purposes!">
      <created>1666203753251</created>
      <option name="number" value="00050" />
      <option name="presentableId" value="LOCAL-00050" />
      <option name="project" value="LOCAL" />
      <updated>1666203753251</updated>
    </task>
    <task id="LOCAL-00051" summary="Casting a ParsedClass to String spits out the class' signature (rather than its full CodeTree reconstruction)">
      <created>1666203961487</created>
      <option name="number" value="00051" />
      <option name="presentableId" value="LOCAL-00051" />
      <option name="project" value="LOCAL" />
      <updated>1666203961487</updated>
    </task>
    <task id="LOCAL-00052" summary="Scraped removal of var names. Would've increased fidelity, but not worth the effort; detecting variable names on instantiation is easy, but then figuring out where they're called exactly in the code and when to replace them with a generic name is a huge pain.">
      <created>1666208276892</created>
      <option name="number" value="00052" />
      <option name="presentableId" value="LOCAL-00052" />
      <option name="project" value="LOCAL" />
      <updated>1666208276892</updated>
    </task>
    <task id="LOCAL-00053" summary="Scraped removal of var names; detecting attributes will be painful, so I've opted to use a library for LCOM (Lack of Cohesion Metric). Jasome looks promising... and achieves already most of what I have here.">
      <created>1666537952460</created>
      <option name="number" value="00053" />
      <option name="presentableId" value="LOCAL-00053" />
      <option name="project" value="LOCAL" />
      <updated>1666537952461</updated>
    </task>
    <task id="LOCAL-00054" summary="Managed to add variable detection and attribute detection, as well as parsing methods. Still no dependencies, though I almost used &quot;JavaParser&quot; and &quot;Jasome&quot;! Truth be told I tried to look at the library's source code and couldn't understand how it read the inputted data, and how to read metrics from them directly. &#10;&#10;I rather work like a mule and build my own solution, but know exactly what my code does and not have to worry about compilation headaches.">
      <created>1666549550969</created>
      <option name="number" value="00054" />
      <option name="presentableId" value="LOCAL-00054" />
      <option name="project" value="LOCAL" />
      <updated>1666549550969</updated>
    </task>
    <task id="LOCAL-00055" summary="Added LCOM1 and LCOM2 calculations in ParsedClass! Was a lot of work, and still needs testing.">
      <created>1666557460719</created>
      <option name="number" value="00055" />
      <option name="presentableId" value="LOCAL-00055" />
      <option name="project" value="LOCAL" />
      <updated>1666557460719</updated>
    </task>
    <task id="LOCAL-00056" summary="Added LCOM calculations to be made over entire repositories.&#10;Added WMC metric, aka Weighted Methods per Class, to both ParsedClass and ParsedRepository.">
      <created>1666558638205</created>
      <option name="number" value="00056" />
      <option name="presentableId" value="LOCAL-00056" />
      <option name="project" value="LOCAL" />
      <updated>1666558638205</updated>
    </task>
    <task id="LOCAL-00057" summary="Planning on adding CBO and DIT for extra modularity and maintainability calculations, so added some comments to indicate intention">
      <created>1666558955212</created>
      <option name="number" value="00057" />
      <option name="presentableId" value="LOCAL-00057" />
      <option name="project" value="LOCAL" />
      <updated>1666558955212</updated>
    </task>
    <task id="LOCAL-00058" summary="Huge progress on file walking, and input handling. Debugged some null pointer exceptions in ParsedMethod, and added a new (first) dependency - to JGit that gives me easy access to the number of commits made in a local repository.">
      <created>1666630553148</created>
      <option name="number" value="00058" />
      <option name="presentableId" value="LOCAL-00058" />
      <option name="project" value="LOCAL" />
      <updated>1666630553148</updated>
    </task>
    <task id="LOCAL-00059" summary="- Added and tested FilePathParser and GitGudder. I can now search for files, search for local git repositories, and tell you how many commits were made in that repo's lifetime. Hoorah!!&#10;- UX added for searching for source files and repositories, with a cute lil' console progress bar. Teehee">
      <created>1666666670905</created>
      <option name="number" value="00059" />
      <option name="presentableId" value="LOCAL-00059" />
      <option name="project" value="LOCAL" />
      <updated>1666666670905</updated>
    </task>
    <task id="LOCAL-00060" summary="Added some pretty, pretty cool input handling for fetching source files or local repositories from user responses. The project's coming together, so now what's left;&#10;  - 1 out of 2 measures of codebase maturity are implemented;&#10;  - 1 out of 2 measures of codebase testability are implemented;&#10;&#10;Next steps should go towards figuring out the two metrics I'm missing if I want to be able to provide an answer to 'Is this codebase easily maintanable? Why or why not?'">
      <created>1666674796517</created>
      <option name="number" value="00060" />
      <option name="presentableId" value="LOCAL-00060" />
      <option name="project" value="LOCAL" />
      <updated>1666674796517</updated>
    </task>
    <task id="LOCAL-00061" summary="Refactoring. I might as well">
      <created>1666674994397</created>
      <option name="number" value="00061" />
      <option name="presentableId" value="LOCAL-00061" />
      <option name="project" value="LOCAL" />
      <updated>1666674994397</updated>
    </task>
    <task id="LOCAL-00062" summary="Created a proper main function for submission.">
      <created>1666708279774</created>
      <option name="number" value="00062" />
      <option name="presentableId" value="LOCAL-00062" />
      <option name="project" value="LOCAL" />
      <updated>1666708279774</updated>
    </task>
    <task id="LOCAL-00063" summary="Improved ParsedMethod to allow a class to return methods that have a certain name, which will be hella useful to know if we're referencing a certain method somewhere else in the code (say, in unit tests!)">
      <created>1666710256288</created>
      <option name="number" value="00063" />
      <option name="presentableId" value="LOCAL-00063" />
      <option name="project" value="LOCAL" />
      <updated>1666710256288</updated>
    </task>
    <task id="LOCAL-00064" summary="Added calculation of number of unit tests per methods. Didn't test that bit yet, but fingers crossed.">
      <created>1666717806521</created>
      <option name="number" value="00064" />
      <option name="presentableId" value="LOCAL-00064" />
      <option name="project" value="LOCAL" />
      <updated>1666717806521</updated>
    </task>
    <task id="LOCAL-00065" summary="Almost done with the code.">
      <created>1666723864572</created>
      <option name="number" value="00065" />
      <option name="presentableId" value="LOCAL-00065" />
      <option name="project" value="LOCAL" />
      <updated>1666723864572</updated>
    </task>
    <task id="LOCAL-00066" summary="Goddamn, I did not know Java could leak memory from the stack to the heap. I am sweating like a hog">
      <created>1666741640097</created>
      <option name="number" value="00066" />
      <option name="presentableId" value="LOCAL-00066" />
      <option name="project" value="LOCAL" />
      <updated>1666741640097</updated>
    </task>
    <task id="LOCAL-00067" summary="Oh my God. It works. IT'S ALIVEEEE">
      <created>1666745498299</created>
      <option name="number" value="00067" />
      <option name="presentableId" value="LOCAL-00067" />
      <option name="project" value="LOCAL" />
      <updated>1666745498299</updated>
    </task>
    <task id="LOCAL-00068" summary="Trying to debug the fact that methods seem to have no tests. Fixed up and improved 'incrementTestedMethodsNumTests', so I think the issue is with functions oustide the scope of the current class. In which case... I don't have the time to debug right now.">
      <created>1666753562458</created>
      <option name="number" value="00068" />
      <option name="presentableId" value="LOCAL-00068" />
      <option name="project" value="LOCAL" />
      <updated>1666753562458</updated>
    </task>
    <task id="LOCAL-00069" summary="Done.">
      <created>1666756440420</created>
      <option name="number" value="00069" />
      <option name="presentableId" value="LOCAL-00069" />
      <option name="project" value="LOCAL" />
      <updated>1666756440420</updated>
    </task>
    <task id="LOCAL-00070" summary="New git branch.">
      <created>1667831499016</created>
      <option name="number" value="00070" />
      <option name="presentableId" value="LOCAL-00070" />
      <option name="project" value="LOCAL" />
      <updated>1667831499016</updated>
    </task>
    <task id="LOCAL-00071" summary="Moved inputhandler package to be enclosed in the parser package. Makes much more sense that way.">
      <created>1667832597069</created>
      <option name="number" value="00071" />
      <option name="presentableId" value="LOCAL-00071" />
      <option name="project" value="LOCAL" />
      <updated>1667832597069</updated>
    </task>
    <task id="LOCAL-00072" summary="Fixed the bugs relating to assert statement detections and referenced method names in ParsedMethod;&#10;&#10;  - In ParsedMethod.setReferencedMethods(), the issue was that the 'else' condition was embedded in the 'if'. Such a small bug, but it made it so that no methods outside of scope were added to methodsNamesReferencedOutsideScope. &#10;  &#10;  - In StringParser.rxAssertStatements, added condition '\n\s+' to detect assert statements that were preceded by line breaks. Now, all asserts are detected and counted.">
      <created>1667836639370</created>
      <option name="number" value="00072" />
      <option name="presentableId" value="LOCAL-00072" />
      <option name="project" value="LOCAL" />
      <updated>1667836639370</updated>
    </task>
    <task id="LOCAL-00073" summary="Improved input handler, and fixed small bugs related to inputs. We can now get statistics from an individual source file, and paste a Windows 11 path directly with no formatting.">
      <created>1667837341277</created>
      <option name="number" value="00073" />
      <option name="presentableId" value="LOCAL-00073" />
      <option name="project" value="LOCAL" />
      <updated>1667837341277</updated>
    </task>
    <task id="LOCAL-00074" summary="Fixed StringParser.rxAssertStatements, and consequently changed the group index to 3 in StringParser.getAssertStatementsOf().">
      <created>1667839325754</created>
      <option name="number" value="00074" />
      <option name="presentableId" value="LOCAL-00074" />
      <option name="project" value="LOCAL" />
      <updated>1667839325754</updated>
    </task>
    <task id="LOCAL-00075" summary="Fixed reference building between methods and functions. Parsed Repositories now have accurate testability.">
      <created>1668018435630</created>
      <option name="number" value="00075" />
      <option name="presentableId" value="LOCAL-00075" />
      <option name="project" value="LOCAL" />
      <updated>1668018435630</updated>
    </task>
    <task id="LOCAL-00076" summary="I wish JGIT was a person just so that I could slap them really hard across the face&#10;&#10;I wish JGIT, the Java library, could feel pain, so that I may inflict upon it the pain it has caused me">
      <created>1668368867519</created>
      <option name="number" value="00076" />
      <option name="presentableId" value="LOCAL-00076" />
      <option name="project" value="LOCAL" />
      <updated>1668368867519</updated>
    </task>
    <task id="LOCAL-00077" summary="Also, this is a freebie, but Maven too, you unfriendly garbage. I'll forgive you Maven for your many UX sins, but seriously, as a newbie to Intellij, fuck all this">
      <created>1668369024206</created>
      <option name="number" value="00077" />
      <option name="presentableId" value="LOCAL-00077" />
      <option name="project" value="LOCAL" />
      <updated>1668369024206</updated>
    </task>
    <task id="LOCAL-00078" summary="- Fixed up JGit to provide commit counts per file; &#10;- Added functionality to Main class for users to manually fetch commit counts of a source file; &#10;- Improved InputHandler's 'promptWelcome' function">
      <created>1668529133328</created>
      <option name="number" value="00078" />
      <option name="presentableId" value="LOCAL-00078" />
      <option name="project" value="LOCAL" />
      <updated>1668529133328</updated>
    </task>
    <task id="LOCAL-00079" summary="- Tweaked GitGudder;&#10;- Improved SoftwareMetricsMain's handling of getting commit counts;">
      <created>1668530034891</created>
      <option name="number" value="00079" />
      <option name="presentableId" value="LOCAL-00079" />
      <option name="project" value="LOCAL" />
      <updated>1668530034891</updated>
    </task>
    <option name="localTasksCounter" value="80" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Added LCOM calculations to be made over entire repositories.&#10;Added WMC metric, aka Weighted Methods per Class, to both ParsedClass and ParsedRepository." />
    <MESSAGE value="Planning on adding CBO and DIT for extra modularity and maintainability calculations, so added some comments to indicate intention" />
    <MESSAGE value="Huge progress on file walking, and input handling. Debugged some null pointer exceptions in ParsedMethod, and added a new (first) dependency - to JGit that gives me easy access to the number of commits made in a local repository." />
    <MESSAGE value="- Added and tested FilePathParser and GitGudder. I can now search for files, search for local git repositories, and tell you how many commits were made in that repo's lifetime. Hoorah!!&#10;- UX added for searching for source files and repositories, with a cute lil' console progress bar. Teehee" />
    <MESSAGE value="Added some pretty, pretty cool input handling for fetching source files or local repositories from user responses. The project's coming together, so now what's left;&#10;  - 1 out of 2 measures of codebase maturity are implemented;&#10;  - 1 out of 2 measures of codebase testability are implemented;&#10;&#10;Next steps should go towards figuring out the two metrics I'm missing if I want to be able to provide an answer to 'Is this codebase easily maintanable? Why or why not?'" />
    <MESSAGE value="Refactoring. I might as well" />
    <MESSAGE value="Created a proper main function for submission." />
    <MESSAGE value="Improved ParsedMethod to allow a class to return methods that have a certain name, which will be hella useful to know if we're referencing a certain method somewhere else in the code (say, in unit tests!)" />
    <MESSAGE value="Added calculation of number of unit tests per methods. Didn't test that bit yet, but fingers crossed." />
    <MESSAGE value="Almost done with the code." />
    <MESSAGE value="Goddamn, I did not know Java could leak memory from the stack to the heap. I am sweating like a hog" />
    <MESSAGE value="Oh my God. It works. IT'S ALIVEEEE" />
    <MESSAGE value="Trying to debug the fact that methods seem to have no tests. Fixed up and improved 'incrementTestedMethodsNumTests', so I think the issue is with functions oustide the scope of the current class. In which case... I don't have the time to debug right now." />
    <MESSAGE value="Done." />
    <MESSAGE value="New git branch." />
    <MESSAGE value="Moved inputhandler package to be enclosed in the parser package. Makes much more sense that way." />
    <MESSAGE value="Fixed the bugs relating to assert statement detections and referenced method names in ParsedMethod;&#10;&#10;  - In ParsedMethod.setReferencedMethods(), the issue was that the 'else' condition was embedded in the 'if'. Such a small bug, but it made it so that no methods outside of scope were added to methodsNamesReferencedOutsideScope. &#10;  &#10;  - In StringParser.rxAssertStatements, added condition '\n\s+' to detect assert statements that were preceded by line breaks. Now, all asserts are detected and counted." />
    <MESSAGE value="Improved input handler, and fixed small bugs." />
    <MESSAGE value="Improved input handler, and fixed small bugs related to inputs. We can now get statistics from an individual source file, and paste a Windows 11 path directly with no formatting." />
    <MESSAGE value="Fixed StringParser.rxAssertStatements, and consequently changed the group index to 3 in StringParser.getAssertStatementsOf()." />
    <MESSAGE value="Fixed reference building between methods and functions. Parsed Repositories now have accurate testability." />
    <MESSAGE value="I wish JGIT was a person just so that I could slap them really hard across the face&#10;&#10;I wish JGIT, the Java library, could feel pain, so that I may inflict upon it the pain it has caused me" />
    <MESSAGE value="Also, this is a freebie, but Maven too, you unfriendly garbage. I'll forgive you Maven for your many UX sins, but seriously, as a newbie to Intellij, fuck all this" />
    <MESSAGE value="- Fixed up JGit to provide commit counts per file; &#10;- Added functionality to Main class for users to manually fetch commit counts of a source file; &#10;- Improved InputHandler's 'promptWelcome' function" />
    <MESSAGE value="- Tweaked GitGudder;&#10;- Improved SoftwareMetricsMain's handling of getting commit counts;" />
    <option name="LAST_COMMIT_MESSAGE" value="- Tweaked GitGudder;&#10;- Improved SoftwareMetricsMain's handling of getting commit counts;" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <breakpoint enabled="true" type="java-exception">
          <properties class="java.lang.StackOverflowError" package="java.lang" />
          <option name="timeStamp" value="2" />
        </breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>